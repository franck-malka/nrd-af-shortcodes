{
  "openapi": "3.0.3",
  "info": {
    "title": "CAP-AEF",
    "version": "1.2.1"
  },
  "paths": {
    "/api/v1.2.1/admin/callflows": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get the list of call flows loaded in the engine",
        "operationId": "getCallFlows",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/callflows/{id}": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Delete a call flow",
        "operationId": "delCallFlow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifer of the call flow",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Add a new call flow",
        "operationId": "addCallFlow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifer of the call flow",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Update a specific call flow",
        "operationId": "setCallFlow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id identifying the callflow",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get a specific call flow",
        "operationId": "getCallFlow",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifer of the call flow",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/alarms": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get the current active alarms",
        "operationId": "getServiceAlarms",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/config": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Update the current configuration",
        "operationId": "setServiceConfig",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/aefConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get the current configuration",
        "operationId": "getServiceConfig",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/counters": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get the system counters",
        "operationId": "getSystemCounters",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/counters/flat": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get the system counters",
        "operationId": "getSystemCountersFlat",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/describe": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Describe microservice capability set",
        "operationId": "getServiceDescription",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/kpis": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get the current system KPIs",
        "operationId": "getServiceKpis",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/restart": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "restart the system",
        "operationId": "setServiceRestart",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/sessions/activeCallsPaginated": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get paginated sessions calls",
        "operationId": "getActiveSessionsPaginated",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/sessions/cap": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get all active cap sessions",
        "operationId": "getActiveCapSessions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/sessions/cap/{sessionId}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Cap session by Id",
        "operationId": "getActiveCapSessionById",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "Session Id",
            "required": false,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/m3ua/peer": {
      "get": {
        "tags": [
          "M3ua config"
        ],
        "summary": "List all the m3ua peers by type",
        "operationId": "listAllPeers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/m3ua/peer/{type}": {
      "post": {
        "tags": [
          "M3ua config"
        ],
        "summary": "Add a new m3ua peer",
        "operationId": "addPeer",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type of the peer: ipsp, asp, sgp",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/m3uaAsp"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "M3ua config"
        ],
        "summary": "List all the m3ua peers by type",
        "operationId": "listPeers",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type of the peer: IPSP, ASP, SGP",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/m3ua/peer/{type}/state": {
      "get": {
        "tags": [
          "M3ua system"
        ],
        "summary": "Retrieve the state of an m3ua peer",
        "operationId": "getPeersStates",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type of the peer: ipsp, asp, sgp",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/m3ua/peer/{type}/{dpc}": {
      "get": {
        "tags": [
          "M3ua config"
        ],
        "summary": "List specific m3ua peer by type",
        "operationId": "getPeer",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type of the peer: ipsp, asp, sgp",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dpc",
            "in": "path",
            "description": "The destination point code",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "M3ua config"
        ],
        "summary": "Delete a m3ua peer",
        "operationId": "delPeer",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type of the peer: ipsp, asp, sgp",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dpc",
            "in": "path",
            "description": "The destination point code",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/m3ua/peer/{type}/{dpc}/state": {
      "get": {
        "tags": [
          "M3ua system"
        ],
        "summary": "Retrieve the state of an m3ua peer",
        "operationId": "getPeerState",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type of the peer: ipsp, asp, sgp",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dpc",
            "in": "path",
            "description": "The destination point code",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/m3ua/peer/{type}/{dpc}/state/{state}": {
      "put": {
        "tags": [
          "M3ua system"
        ],
        "summary": "Set the state of an m3ua peer",
        "operationId": "setPeerState",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type of the peer: ipsp, asp, sgp",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dpc",
            "in": "path",
            "description": "The destination point code",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "state",
            "in": "path",
            "description": "The desired state to apply: start or stop",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sccp/address": {
      "get": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Retrieve the sccp addresses",
        "operationId": "getAddresses",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "post": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Add a new sccp address",
        "operationId": "addAddress",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sccpRoutingAddress"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sccp/address/{id}": {
      "delete": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Delete a sccp address",
        "operationId": "delAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The address index identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Retreive a sccp address",
        "operationId": "getAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The address index identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "post": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Add a new sccp address",
        "operationId": "updateAddress",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The address index identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sccpRoutingAddress"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sccp/resource": {
      "delete": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Delete sccp resources",
        "operationId": "delResources",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "post": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Add a sccp resource",
        "operationId": "addResource",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sccpResource"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Retrieve the sccp resources",
        "operationId": "getResources",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sccp/resource/{spc}": {
      "delete": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Delete a sccp resource",
        "operationId": "delResource",
        "parameters": [
          {
            "name": "spc",
            "in": "path",
            "description": "The served point code",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Get a sccp resource",
        "operationId": "getResource",
        "parameters": [
          {
            "name": "spc",
            "in": "path",
            "description": "The served point code",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sccp/rule": {
      "get": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Retrieve the sccp rules",
        "operationId": "getRules",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "post": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Add a new sccp rule",
        "operationId": "addRule",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sccpRoutingRule"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sccp/rule/{id}": {
      "delete": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Delete a sccp destination",
        "operationId": "delRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The rule index identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Retreive a sccp rule",
        "operationId": "getRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The rule index identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "put": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Update an sccp rule",
        "operationId": "updateRule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The rule index identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sccpRoutingRule"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sccp/sap": {
      "post": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Add a new sccp sap",
        "operationId": "addSap",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sccpSap"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Retrieve the sccp saps",
        "operationId": "getSaps",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sccp/sap/{id}": {
      "delete": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Delete a sccp sap",
        "operationId": "delSap",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The sap index identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Retreive a new sccp sap",
        "operationId": "getSap",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The sap index identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sccp/sap/{id}/destination": {
      "get": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Retrieve the sccp destinations",
        "operationId": "getDestinations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The sap index identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "post": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Add a new sccp destination",
        "operationId": "addDestination",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The sap index identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sccpDestination"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sccp/sap/{id}/destination/{dpc}": {
      "delete": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Delete a sccp destination",
        "operationId": "delDestination",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The sap index identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dpc",
            "in": "path",
            "description": "The destination point code",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Retreive a sccp destination",
        "operationId": "getDestination",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The sap index identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dpc",
            "in": "path",
            "description": "The destination point code",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sctp/association": {
      "post": {
        "tags": [
          "Sctp config"
        ],
        "summary": "Add a new sctp association",
        "operationId": "addSctpAssoc",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sctpAssociation"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "Sctp config"
        ],
        "summary": "List all the sctp associations",
        "operationId": "listSctpAssocs",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sctp/association/state": {
      "get": {
        "tags": [
          "Sctp system"
        ],
        "summary": "Retrieve the state of an sctp associations",
        "operationId": "getSctpAssocsStates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sctp/association/{name}": {
      "get": {
        "tags": [
          "Sctp config"
        ],
        "summary": "List specific sctp association",
        "operationId": "getSctpAssoc",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name od the sctp association",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "Sctp config"
        ],
        "summary": "Delete an sctp association",
        "operationId": "delSctpAssoc",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name od the sctp association",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "put": {
        "tags": [
          "Sctp config"
        ],
        "summary": "Update an sctp association",
        "operationId": "modifySctpAssoc",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name od the sctp association",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sctpAssociation"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sctp/association/{name}/state": {
      "get": {
        "tags": [
          "Sctp system"
        ],
        "summary": "Retrieve the state of an sctp association",
        "operationId": "getSctpAssocState",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name od the sctp association",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sctp/association/{name}/state/{state}": {
      "put": {
        "tags": [
          "Sctp system"
        ],
        "summary": "Set the state of an sctp association",
        "operationId": "setSctpAssocState",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name od the sctp association",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "path",
            "description": "The desire state: start or stop",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sctp/server": {
      "get": {
        "tags": [
          "Sctp config"
        ],
        "summary": "List all the sctp servers",
        "operationId": "listSctpServers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "post": {
        "tags": [
          "Sctp config"
        ],
        "summary": "Add a new sctp server",
        "operationId": "addSctpServer",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sctpServer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sctp/server/state": {
      "get": {
        "tags": [
          "Sctp system"
        ],
        "summary": "List all the sctp servers",
        "operationId": "getSctpServersStates",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sctp/server/{name}": {
      "put": {
        "tags": [
          "Sctp config"
        ],
        "summary": "Modify an sctp server",
        "operationId": "modifySctpServer",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name od the sctp server",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sctpServer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "Sctp config"
        ],
        "summary": "Delete an sctp server",
        "operationId": "delSctpServer",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name od the sctp server",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "get": {
        "tags": [
          "Sctp config"
        ],
        "summary": "List specific sctp server",
        "operationId": "getSctpServer",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name od the sctp server",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sctp/server/{name}/state": {
      "get": {
        "tags": [
          "Sctp system"
        ],
        "summary": "Get specific sctp server state",
        "operationId": "getSctpServerState",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name od the sctp server",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/sctp/server/{name}/state/{state}": {
      "put": {
        "tags": [
          "Sctp system"
        ],
        "summary": "Set the state of an sctp server",
        "operationId": "setSctpServerState",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name od the sctp server",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "path",
            "description": "The desire state: start or stop",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/ss7/settings": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Retrieve the sccp settings",
        "operationId": "getSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Save the ss7 settings",
        "operationId": "setSettings",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sccp"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/start": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "start the system",
        "operationId": "setServiceStart",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/stats": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get the system statistics",
        "operationId": "getServiceStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/stats/hour": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get the system statistics for last hour",
        "operationId": "getServiceStatsLastHour",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/stats/minute": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get the system statistics for last hour",
        "operationId": "getServiceStatsLastMinute",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/status": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get the system status",
        "operationId": "getServiceStatus",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/stop": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "stop the system",
        "operationId": "setServiceStop",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/admin/service/version": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get the system version",
        "operationId": "getServiceVersion",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/function/blacklist": {
      "put": {
        "tags": [
          "Functions"
        ],
        "summary": "Check if number is blacklisted",
        "operationId": "blacklist",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/blacklistRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/function/fail2ban": {
      "put": {
        "tags": [
          "Functions"
        ],
        "summary": "Ban or allow a call attempt",
        "operationId": "fail2ban",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fail2banRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/function/fail2ban/attempts/{serviceKey}/{msisdn}": {
      "get": {
        "tags": [
          "Functions"
        ],
        "summary": "Get fail2ban count for a given msisdn",
        "operationId": "getFail2ban",
        "parameters": [
          {
            "name": "serviceKey",
            "in": "path",
            "description": "service key to lookup",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "msisdn",
            "in": "path",
            "description": "subscriber number",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/function/fail2ban/clear": {
      "delete": {
        "tags": [
          "Functions"
        ],
        "summary": "Delete all fail2ban entries",
        "operationId": "clearFail2ban",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/function/fixdial": {
      "put": {
        "tags": [
          "Functions"
        ],
        "summary": "Fix a dialed number",
        "operationId": "fixdial",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fixdialRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/function/normalize": {
      "put": {
        "tags": [
          "Functions"
        ],
        "summary": "Normalize a number",
        "operationId": "normalize",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/normalizeRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/subscription": {
      "post": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Subscribe to SCF cap events",
        "description": "Gives the application to receive webhooks to the defined callback URL in the subscription payload on a per serviceid basis.",
        "operationId": "scfSubscribe",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subscription"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Delete a SCF subscription",
        "description": "Remove the subscription to stop receiving callbacks to the application for a specific service id.",
        "operationId": "scfUnsubscribe",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subscription"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}": {
      "get": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Get the status of a call",
        "operationId": "scfStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/activitytest": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send an Activity Test to SSF or SRF",
        "description": "his IF is used to check for the continued existence of a relationship between the gsmSCF and gsmSSF. If the relationship is still in existence, then the gsmSSF will respond. If no reply is received, then the gsmSCF will assume that the gsmSSF has failed in some way and will take appropriate action.",
        "operationId": "activityTest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "callbacks": {
          "activityTestAck": {
            "{request.body#/api/v1.2.1/cap/ssf/call/{id}/activitytest}": {
              "put": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/returnResult"
                      }
                    }
                  },
                  "required": false
                },
                "responses": {
                  "200": {
                    "description": "Success (end of procedure)",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "Error description",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/applycharging": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send an apply charging request (ACH) to SSF",
        "description": "This IF is used to instruct the gsmSSF to apply charging mechanisms to control the call duration.",
        "operationId": "applyCharging",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/applyCharging"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "callbacks": {
          "applyCharginReport": {
            "{request.body#/api/v1.2.1/cap/ssf/call/{id}/applycharginreport}": {
              "put": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/applyChargingReport"
                      }
                    }
                  },
                  "required": false
                },
                "responses": {
                  "200": {
                    "description": "Success (end of procedure)",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "Error description",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/callgap": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a call GAP to SSF",
        "description": "This IF is used to activate/modify/remove a call gap mechanism in the gsmSSF. The call gap mechanism is used to reduce the rate at which specific service requests are sent to a gsmSCF.",
        "operationId": "callGap",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/callGap"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "callbacks": {
          "callGapResponse": {
            "{request.body#/api/v1.2.1/cap/ssf/call/{id}/callgap}": {
              "put": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/returnResult"
                      }
                    }
                  },
                  "required": false
                },
                "responses": {
                  "200": {
                    "description": "Success (end of procedure)",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "Error description",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/callinformation": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a Call Information request to SSF",
        "description": "This IF is used to request the gsmSSF to record specific information about a single call party and report it to the gsmSCF (with a Call Information Report IF).",
        "operationId": "callInformation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/callInformationReq"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "callbacks": {
          "callInformationResponse": {
            "{request.body#/api/v1.2.1/cap/ssf/call/{id}/callinformation}": {
              "put": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/returnResult"
                      }
                    }
                  },
                  "required": false
                },
                "responses": {
                  "200": {
                    "description": "Success (end of procedure)",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "Error description",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/cancel": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a Cancel request to SSF",
        "description": "This IF is used by the gsmSCF to request the gsmSSF to cancel all EDPs and reports.",
        "operationId": "cancel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "callbacks": {
          "cancelResponse": {
            "{request.body#/api/v1.2.1/cap/ssf/call/{id}/cancel}": {
              "put": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/returnResult"
                      }
                    }
                  },
                  "required": false
                },
                "responses": {
                  "200": {
                    "description": "Success (end of procedure)",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "Error description",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/charginginformation": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send Charging Information to SSF",
        "description": "This IF is used to send e-parameters from the gsmSCF to the gsmSSF.",
        "operationId": "chargingInformation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/chargingInformationReq"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/collectinformation": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a Collect Information request to SSF",
        "description": "This IF is used to instruct the gsmSSF to collect additional dialled digits from the calling party and report them to the gsmSCF. The use of this operation is only appropriate for a call which has not yet left the set-up phase.",
        "operationId": "collectInformation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "callbacks": {
          "collectInformationResult": {
            "{request.body#/api/v1.2.1/cap/ssf/call/{id}/collectinformation}": {
              "put": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/returnResult"
                      }
                    }
                  },
                  "required": false
                },
                "responses": {
                  "200": {
                    "description": "Success (end of procedure)",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "Error description",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/connect": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a Connect (CON) to the SSF",
        "description": "This IF is used to request the gsmSSF to perform the call processing actions to route a call to a specific destination. To do so, the gsmSSF may use destination information from the calling party and existing call set-up information depending on the information provided by the gsmSCF.",
        "operationId": "connect",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/connect"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/connecttoresource": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a ConnectToResource request to SSF",
        "description": "This IF is used to connect a call from the gsmSSF to a gsmSRF.",
        "operationId": "connectToResource",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/connectToResource"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/continue": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a Continue (CUE) to SSF",
        "description": "This IF requests the gsmSSF to proceed with call processing at the DP at which it previously suspended call processing to await gsmSCF instructions. The gsmSSF completes DP processing, and continues basic call processing (i.e. proceeds to the next point in call in the BCSM) without substituting new data from the gsmSCF.",
        "operationId": "_continue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/continueWithArgs"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/disconnectforwardconnection": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a Disconnect Forward Connection (DFC) to SSF",
        "description": "This IF is used to disconnect a connection with a gsmSRF previously established with a Connect To Resource IF or to disconnect an initiating gsmSSF from an assisting gsmSSF and its associated gsmSRF. The IF is sent to the initiating gsmSSF.",
        "operationId": "disconnectForwardConnection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disconnectForwardConnection"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/disconnectleg": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a Disconnect Leg Request to SSF",
        "description": "This IF is used to request the gsmSSF to release a specific leg associated with the call at any phase. All other legs in this call are retained. If the last leg of the call segment is disconnected, then the call segment is deleted.",
        "operationId": "disconnectLeg",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/disconnectLegReq"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "callbacks": {
          "disconnectLegResult": {
            "{request.body#/api/v1.2.1/cap/ssf/call/{id}/returnresult}": {
              "put": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/returnResult"
                      }
                    }
                  },
                  "required": false
                },
                "responses": {
                  "200": {
                    "description": "Success (end of procedure)",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "Error description",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "disconnectLegError": {
            "{request.body#/api/v1.2.1/cap/ssf/call/{id}/returnError}": {
              "put": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/returnError"
                      }
                    }
                  },
                  "required": false
                },
                "responses": {
                  "200": {
                    "description": "Success (end of procedure)",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "Error description",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/establishtemporaryconnection": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a Establich Temporary Connection (ETC) to SSF",
        "description": "This IF is used to create a connection between an initiating gsmSSF and an assisting gsmSSF as a part of the assist procedure. It can also be used to create a connection between a gsmSSF and a gsmSRF.",
        "operationId": "establishTemporaryConnection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/establishTemporaryConnectionReq"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/furnishcharginginformation": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a Furnish Charging Information Request to SSF",
        "description": "This IF is used to request the gsmSSF to include call related information in the CAMEL specific logical call record. The logical call record is created when the Furnish Charging Information IF is received and a logical call record for that leg does not exist. For modelling purposes the logical call record is buffered in the gsmSSF. The gsmSSF completes logical call records as defined in the SDLs. Once the logical call record is completed, then the free format data are moved to the corresponding CDR and the logical call record is deleted.",
        "operationId": "furnishChargingInformation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/furnishChargingInformationReq"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/initiatecallattempt": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send an Initial Call Attempt to Request to SSF",
        "description": "This IF is used to request the gsmSSF to create a new party in an existing call (NP), or to create a completely new call (NC). The created leg is an originating call. The address information provided by the gsmSCF is used.",
        "operationId": "initiateCallAttempt",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/initiateCallAttemptReq"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/moveleg": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a Move Leg Request to SSF",
        "description": "This IF requests the gsmSSF to move a leg to CSID1. After the move the source call segment is deleted.",
        "operationId": "moveLeg",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/moveLegReq"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "callbacks": {
          "moveLegResult": {
            "{request.body#/api/v1.2.1/cap/ssf/call/{id}/returnresult}": {
              "put": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/returnResult"
                      }
                    }
                  },
                  "required": false
                },
                "responses": {
                  "200": {
                    "description": "Success (end of procedure)",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "Error description",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "moveLegError": {
            "{request.body#/api/v1.2.1/cap/ssf/call/{id}/returnError}": {
              "put": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/returnError"
                      }
                    }
                  },
                  "required": false
                },
                "responses": {
                  "200": {
                    "description": "Success (end of procedure)",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "Error description",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/playannouncement": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a Play Announcement towards SSF",
        "description": "This IF is used for inband interaction.",
        "operationId": "playAnnouncement",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Numeric identifier of the cap dialog",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/playAnnouncement"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "callbacks": {
          "specializedResourceReport": {
            "{request.body#/api/v1.2.1/cap/ssf/call/{id}/specializedresourcereport}": {
              "put": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/specializedResourceReport"
                      }
                    }
                  },
                  "required": false
                },
                "responses": {
                  "200": {
                    "description": "Success (end of procedure)",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "Error description",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/promptandcollectinformation": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a PromptAndCollectInformation towards SSF",
        "description": "This IF is used to interact with a call party in order to collect information.",
        "operationId": "promptAndCollectInformation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/promptCollectUserInfoReq"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "callbacks": {
          "promptAndCollectInfromationResult": {
            "{request.body#/api/v1.2.1/cap/ssf/call/{id}/promptandcollectinformation}": {
              "put": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/promptCollectUserInfoRes"
                      }
                    }
                  },
                  "required": false
                },
                "responses": {
                  "200": {
                    "description": "Success (end of procedure)",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "Error description",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/release/{cause}": {
      "delete": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a Release (REL) to SSF",
        "description": "This IF is used by the gsmSCF to tear down an existing call at any phase of the call for all parties involved in the call.",
        "operationId": "release",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/requestreportbcsm": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a Request Report BCSM Event (RRB) to SSF",
        "description": "This IF is used to request the gsmSSF to monitor for a call-related event, then send a notification back to the gsmSCF when the event is detected (see Event Report BCSM).",
        "operationId": "requestReportBCSM",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requestReportBCSM"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "callbacks": {
          "eventReportBCSM": {
            "{request.body#/api/v1.2.1/cap/ssf/call/{id}/eventreportbcsm}": {
              "put": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/eventReportBCSM"
                      }
                    }
                  },
                  "required": false
                },
                "responses": {
                  "200": {
                    "description": "Success (end of procedure)",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "Error description",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/resettimer": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a Reset Timer to SSF",
        "description": "This IF is used to reset a timer.",
        "operationId": "resetTimer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/resetTimerReq"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/returnerror": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a Return Error",
        "operationId": "returnError",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/returnError"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/returnresult": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a Return Result",
        "operationId": "returnResult",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/returnResult"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/scf/call/{id}/splitleg": {
      "put": {
        "tags": [
          "gsmSCF to gsmSSF"
        ],
        "summary": "Send a Split Leg Request to SSF",
        "description": "This IF is used to request the gsmSSF to separate a leg from CSID1 and move it to a new call segment.",
        "operationId": "splitLeg",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/splitLegReq"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "callbacks": {
          "splitLegResult": {
            "{request.body#/api/v1.2.1/cap/ssf/call/{id}/returnresult}": {
              "put": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/returnResult"
                      }
                    }
                  },
                  "required": false
                },
                "responses": {
                  "200": {
                    "description": "Success (end of procedure)",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "Error description",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "spitLegError": {
            "{request.body#/api/v1.2.1/cap/ssf/call/{id}/returnError}": {
              "put": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/returnError"
                      }
                    }
                  },
                  "required": false
                },
                "responses": {
                  "200": {
                    "description": "Success (end of procedure)",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "Error description",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/srf/call/subscription": {
      "delete": {
        "tags": [
          "gsmSRF to gsmSCF"
        ],
        "summary": "Delete a subscription",
        "description": "Remove the subscription to stop receiving callbacks to the application.",
        "operationId": "srfUnsubscribe",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subscription"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "post": {
        "tags": [
          "gsmSRF to gsmSCF"
        ],
        "summary": "Subscribe to SRF cap events",
        "description": "Gives the application to receive webhooks to the defined callback URL in the subscription payload.",
        "operationId": "srfSubscribe",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subscription"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/srf/call/{id}": {
      "get": {
        "tags": [
          "gsmSRF to gsmSCF"
        ],
        "summary": "Get the status of a call",
        "operationId": "scfStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/srf/call/{id}/activitytest": {
      "put": {
        "tags": [
          "gsmSRF to gsmSCF"
        ],
        "summary": "Send an Activity Test ACK to SCF",
        "description": "This IF is the response to the Activity Test.",
        "operationId": "acivityTestAck",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/returnResult"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/srf/call/{id}/assistrequestinstructions": {
      "put": {
        "tags": [
          "gsmSRF to gsmSCF"
        ],
        "summary": "Send an Assist Request Instructions to SCF",
        "description": "This IF is sent to the gsmSCF by a gsmSSF which is acting as the assisting gsmSSF or by a gsmSRF.",
        "operationId": "assistRequestInstructions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/assistRequestInstructions"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "callbacks": {
          "assistRequestInstrutcionsResult": {
            "{request.body#/api/v1.2.1/cap/scf/call/{id}/returnresult}": {
              "put": {
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/returnResult"
                      }
                    }
                  },
                  "required": false
                },
                "responses": {
                  "200": {
                    "description": "Success (end of procedure)",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  },
                  "404": {
                    "description": "Error description",
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/responseParams"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/srf/call/{id}/promptandcollectinformation": {
      "put": {
        "tags": [
          "gsmSRF to gsmSCF"
        ],
        "summary": "Send a Prompt And Collect User Information ACK to SCF",
        "description": "This IF is used by the gsmSRF to indicate the result of a Prompt And Collect User Information IF.",
        "operationId": "promptAndCollectInformationAck",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/initialDp"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/srf/call/{id}/returnerror": {
      "put": {
        "tags": [
          "gsmSRF to gsmSCF"
        ],
        "summary": "Send a Return Error",
        "operationId": "returnError",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/returnError"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/srf/call/{id}/returnresult": {
      "put": {
        "tags": [
          "gsmSRF to gsmSCF"
        ],
        "summary": "Send a Return Result",
        "operationId": "returnResult",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/returnResult"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/srf/call/{id}/specializedresourcereport": {
      "put": {
        "tags": [
          "gsmSRF to gsmSCF"
        ],
        "summary": "Send a Specialized Resource Report to SCF",
        "description": "This IF is used when a Specialized Resource Report was requested in a Play Announcement IF or in a Prompt and Collect User Information IF.",
        "operationId": "specializedResourceReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/specializedResourceReport"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/ssf/call/initialdp": {
      "post": {
        "tags": [
          "gsmSSF to gsmSCF"
        ],
        "summary": "Send an InitialDP",
        "description": "This IF is generated by the gsmSSF when a trigger is detected at a DP in the BCSM, to request instructions from the gsmSCF.",
        "operationId": "initialDp",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/initialDp"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/ssf/call/subscription": {
      "post": {
        "tags": [
          "gsmSSF to gsmSCF"
        ],
        "summary": "Subscribe to SSF cap events",
        "description": "Gives the application to receive webhooks to the defined callback URL in the subscription payload.",
        "operationId": "ssfSubscribe",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subscription"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      },
      "delete": {
        "tags": [
          "gsmSSF to gsmSCF"
        ],
        "summary": "Delete a subscription",
        "description": "Remove the subscription to stop receiving callbacks to the application.",
        "operationId": "ssfUnsubscribe",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subscription"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/ssf/call/{id}": {
      "get": {
        "tags": [
          "gsmSSF to gsmSCF"
        ],
        "summary": "Get the status of a call",
        "operationId": "ssfStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/ssf/call/{id}/applychargingreport": {
      "put": {
        "tags": [
          "gsmSSF to gsmSCF"
        ],
        "summary": "Send an Apply Charging Report (ACR) to SCF",
        "description": "This IF is used by the gsmSSF to report to the gsmSCF the information requested in the Apply Charging IF.",
        "operationId": "applyChargingReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/applyChargingReport"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/ssf/call/{id}/callinformationreport": {
      "put": {
        "tags": [
          "gsmSSF to gsmSCF"
        ],
        "summary": "Send a Call Information Report to SCF",
        "description": "This IF is used to send specific call information for a single call party to the gsmSCF as requested by the gsmSCF in a previous Call Information Request IF.",
        "operationId": "callInformationReport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/initialDp"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/ssf/call/{id}/disconnectleg": {
      "put": {
        "tags": [
          "gsmSSF to gsmSCF"
        ],
        "summary": "Send a Disconnect Leg ACK to SCF",
        "description": "This IF is the successful response to the Disconnect Leg IF.",
        "operationId": "disconnectLegAck",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/initialDp"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/ssf/call/{id}/enityrelease": {
      "put": {
        "tags": [
          "gsmSSF to gsmSCF"
        ],
        "summary": "Send an Entity Released to SCF",
        "description": "This IF is used to inform the gsmSCF about the release of a logical entity (CS or BCSM) caused by exception or errors.",
        "operationId": "entityRelease",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/entityReleased"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/ssf/call/{id}/eventreportbcsm": {
      "put": {
        "tags": [
          "gsmSSF to gsmSCF"
        ],
        "summary": "Send an Event Report BCSM to SCF",
        "description": "This IF is used to notify the gsmSCF of a call-related event (i.e. BCSM events as answer and disconnect) previously requested by the gsmSCF in a Request Report BCSM Event IF.",
        "operationId": "eventReportBCSM",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/eventReportBCSM"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/ssf/call/{id}/initiatecallattempt": {
      "put": {
        "tags": [
          "gsmSSF to gsmSCF"
        ],
        "summary": "Send an Intiate Call Attempt ACK to SCF",
        "description": "This IF is the successful response to the Initiate Call Attempt IF.",
        "operationId": "initiateCallAttemptAck",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/initialDp"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/ssf/call/{id}/moveleg": {
      "put": {
        "tags": [
          "gsmSSF to gsmSCF"
        ],
        "summary": "Send a Move Leg ACK to SCF",
        "description": "This IF is the successful response to the Move Leg IF.",
        "operationId": "moveLegAck",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/initialDp"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/ssf/call/{id}/returnerror": {
      "put": {
        "tags": [
          "gsmSSF to gsmSCF"
        ],
        "summary": "Send a Return Error",
        "operationId": "returnError",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/ssf/call/{id}/returnresult": {
      "put": {
        "tags": [
          "gsmSSF to gsmSCF"
        ],
        "summary": "Send a Return Result",
        "operationId": "returnResult",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/cap/ssf/call/{id}/splitleg": {
      "put": {
        "tags": [
          "gsmSSF to gsmSCF"
        ],
        "summary": "Send a Split Leg ACK to SCF",
        "description": "This IF is the successful response to the Move Leg IF.",
        "operationId": "splitLegAck",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cap session",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/initialDp"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1.2.1/ss7lb/admin/config/sccp/sap/{id}/destination/{dpc}": {
      "put": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Update a new sccp destination",
        "operationId": "setDestination",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The sap index identifier",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "dpc",
            "in": "path",
            "description": "The destination point code",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sccpDestination"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1/ss7lb/admin/system/sccp/resource/state": {
      "get": {
        "tags": [
          "Sccp system"
        ],
        "summary": "Retrieve the sccp resources state",
        "operationId": "getResourcesState",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1/ss7lb/admin/system/sccp/resource/{spc}/state": {
      "get": {
        "tags": [
          "Sccp config"
        ],
        "summary": "Get a sccp resource state",
        "operationId": "getResourceState",
        "parameters": [
          {
            "name": "spc",
            "in": "path",
            "description": "The served point code",
            "required": true,
            "deprecated": false,
            "allowEmptyValue": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/api/v1/ss7lb/admin/system/sccp/stats": {
      "get": {
        "tags": [
          "Sccp system"
        ],
        "summary": "Retrieve the sccp statistics",
        "operationId": "getStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseParams"
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": []
      }
    }
  },
  "components": {
    "schemas": {
      "blacklistRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "calledPartyNumber": {
            "$ref": "#/components/schemas/address"
          },
          "serviceKey": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "serviceKey"
        ]
      },
      "fail2banRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "calledPartyNumber": {
            "$ref": "#/components/schemas/address"
          },
          "serviceKey": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "serviceKey"
        ]
      },
      "normalizeRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "callParty": {
            "type": "string"
          },
          "imsi": {
            "type": "string"
          },
          "partyNumber": {
            "$ref": "#/components/schemas/address"
          },
          "serviceKey": {
            "type": "integer",
            "format": "int32"
          },
          "eventType": {
            "$ref": "#/components/schemas/EventTypeBCSM"
          },
          "vlrNumber": {
            "type": "string"
          }
        },
        "required": [
          "serviceKey"
        ]
      },
      "subscription": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "url": {
            "type": "string"
          },
          "serviceKey": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "serviceKey"
        ]
      },
      "aefConfig": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "overloadRecoveryPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "capif": {
            "$ref": "#/components/schemas/capif"
          },
          "fail2banCacheMaxSize": {
            "type": "integer",
            "format": "int32"
          },
          "useUrl": {
            "type": "string"
          },
          "fail2banCacheMaxTime": {
            "type": "integer",
            "format": "int64"
          },
          "urlHost": {
            "type": "string"
          },
          "sessionCacheMaxTime": {
            "type": "integer",
            "format": "int64"
          },
          "hostName": {
            "type": "string"
          },
          "licenseKey": {
            "type": "string"
          },
          "enableWriteAUDIT": {
            "type": "boolean"
          },
          "enableWriteCDR": {
            "type": "boolean"
          },
          "urlProtocol": {
            "type": "string"
          },
          "ss7": {
            "$ref": "#/components/schemas/ss7"
          },
          "snmp": {
            "$ref": "#/components/schemas/snmp"
          },
          "fail2ban": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fail2ban"
            }
          },
          "overloadSendAlarmOnly": {
            "type": "boolean"
          },
          "httpClient": {
            "$ref": "#/components/schemas/httpClient"
          },
          "defaultAfUrl": {
            "type": "string"
          },
          "instanceName": {
            "type": "string"
          },
          "overloadDisoveryPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "type": "string"
          },
          "configDir": {
            "type": "string"
          },
          "scriptReloadPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "apiMaxRecordsLimit": {
            "type": "integer",
            "format": "int32"
          },
          "urlScheme": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "overloadRecoveryThreshold": {
            "type": "number",
            "format": "double"
          },
          "sessionCacheMaxSize": {
            "type": "integer",
            "format": "int32"
          },
          "internationalPrefix": {
            "type": "string"
          },
          "mongo": {
            "$ref": "#/components/schemas/mongo"
          },
          "password": {
            "type": "string"
          },
          "firewallEnabled": {
            "type": "boolean"
          },
          "http2": {
            "$ref": "#/components/schemas/http2"
          },
          "urlPort": {
            "type": "integer",
            "format": "int32"
          },
          "overloadThreshold": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "overloadRecoveryPeriod",
          "fail2banCacheMaxSize",
          "fail2banCacheMaxTime",
          "sessionCacheMaxTime",
          "enableWriteAUDIT",
          "enableWriteCDR",
          "overloadSendAlarmOnly",
          "overloadDisoveryPeriod",
          "scriptReloadPeriod",
          "apiMaxRecordsLimit",
          "overloadRecoveryThreshold",
          "sessionCacheMaxSize",
          "firewallEnabled",
          "urlPort",
          "overloadThreshold"
        ]
      },
      "fail2ban": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "maxAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "timeSpan": {
            "type": "integer",
            "format": "int32"
          },
          "service": {
            "type": "string"
          }
        },
        "required": [
          "maxAttempts",
          "timeSpan"
        ]
      },
      "responseParams": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "address": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "apri": {
            "type": "integer",
            "format": "int32"
          },
          "noa": {
            "type": "integer",
            "format": "int32"
          },
          "digits": {
            "type": "string"
          },
          "npi": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "apri",
          "noa",
          "npi"
        ]
      },
      "aocBeforeAnswer": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "cgaGsm0224": {
            "$ref": "#/components/schemas/ciaGsm0224"
          }
        }
      },
      "aocSubsequent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tariffSwitchInterval": {
            "type": "integer",
            "format": "int32"
          },
          "cgaGsm0224": {
            "$ref": "#/components/schemas/ciaGsm0224"
          }
        },
        "required": [
          "tariffSwitchInterval"
        ]
      },
      "applyCharging": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "billingCharacteristics": {
            "$ref": "#/components/schemas/applyChargingBillingCharacteristics"
          },
          "partyToCharge": {
            "$ref": "#/components/schemas/LegType"
          },
          "address": {
            "$ref": "#/components/schemas/applyChargingAddress"
          }
        }
      },
      "applyChargingAddress": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "srfConnection": {
            "type": "integer",
            "format": "int32"
          },
          "receivingLeg": {
            "$ref": "#/components/schemas/LegType"
          },
          "sendingLeg": {
            "$ref": "#/components/schemas/LegType"
          }
        },
        "required": [
          "srfConnection"
        ]
      },
      "applyChargingBillingCharacteristics": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tariffSwitchInterval": {
            "type": "integer",
            "format": "int64"
          },
          "releaseIfdurationExceeded": {
            "type": "boolean"
          },
          "tone": {
            "type": "boolean"
          },
          "maxCallPeriodDuration": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "maxCallPeriodDuration"
        ]
      },
      "applyChargingReport": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "legActive": {
            "type": "boolean"
          },
          "receivingLeg": {
            "$ref": "#/components/schemas/LegType"
          },
          "dialogId": {
            "type": "integer",
            "format": "int64"
          },
          "sendingLeg": {
            "$ref": "#/components/schemas/LegType"
          },
          "final": {
            "type": "boolean"
          },
          "timeSinceTariffSwitch": {
            "type": "integer",
            "format": "int32"
          },
          "tariffSwitchInterval": {
            "type": "integer",
            "format": "int32"
          },
          "callLegReleasedAtTcpExpiry": {
            "type": "boolean"
          },
          "partyToCharge": {
            "$ref": "#/components/schemas/LegType"
          },
          "timeIfNoTarifSwitch": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "legActive",
          "dialogId",
          "final",
          "timeSinceTariffSwitch",
          "tariffSwitchInterval",
          "callLegReleasedAtTcpExpiry"
        ]
      },
      "assistRequestInstructions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "ipSspCapabilities": {
            "$ref": "#/components/schemas/ipSspCapabilities"
          }
        }
      },
      "bcsmEvent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "automaticRearm": {
            "type": "boolean"
          },
          "monitoringMode": {
            "$ref": "#/components/schemas/MonitorMode"
          },
          "receivingLeg": {
            "$ref": "#/components/schemas/LegType"
          },
          "eventType": {
            "$ref": "#/components/schemas/EventTypeBCSM"
          },
          "sendingLeg": {
            "$ref": "#/components/schemas/LegType"
          },
          "specificCriteria": {
            "$ref": "#/components/schemas/dpSpecificCriteria"
          }
        },
        "required": [
          "automaticRearm"
        ]
      },
      "callGap": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "criteria": {
            "$ref": "#/components/schemas/callGapCriteria"
          },
          "threatment": {
            "type": "string"
          },
          "indicators": {
            "$ref": "#/components/schemas/callGapIndicators"
          },
          "controlType": {
            "$ref": "#/components/schemas/ControlType"
          }
        }
      },
      "callGapCriteria": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "compound": {
            "$ref": "#/components/schemas/callGapCriteriaCompound"
          },
          "basic": {
            "$ref": "#/components/schemas/callGapCriteriaBasic"
          }
        }
      },
      "callGapCriteriaBasic": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "digits": {
            "type": "string"
          },
          "serviceKey": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "serviceKey"
        ]
      },
      "callGapCriteriaCompound": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "scfId": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "callGapIndicators": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "interval": {
            "type": "integer",
            "format": "int32"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "interval",
          "duration"
        ]
      },
      "callInformationReq": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "requestedInformationList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/requestedInformation"
            }
          },
          "legId": {
            "$ref": "#/components/schemas/LegType"
          }
        }
      },
      "chargingInformationReq": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "aocExtension": {
            "type": "string",
            "format": "binary"
          },
          "aocBeforeAnswer": {
            "$ref": "#/components/schemas/aocBeforeAnswer"
          },
          "aocSubsequent": {
            "$ref": "#/components/schemas/aocSubsequent"
          },
          "partyToCharge": {
            "$ref": "#/components/schemas/LegType"
          }
        }
      },
      "ciaGsm0224": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "e7": {
            "type": "integer",
            "format": "int32"
          },
          "e2": {
            "type": "integer",
            "format": "int32"
          },
          "e1": {
            "type": "integer",
            "format": "int32"
          },
          "e6": {
            "type": "integer",
            "format": "int32"
          },
          "e5": {
            "type": "integer",
            "format": "int32"
          },
          "e4": {
            "type": "integer",
            "format": "int32"
          },
          "e3": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "e7",
          "e2",
          "e1",
          "e6",
          "e5",
          "e4",
          "e3"
        ]
      },
      "componentErrorType": {
        "type": "string",
        "enum": [
          "CancelFailed",
          "ParameterLess",
          "RequestedInfoError",
          "SystemFailure",
          "TaskRefused"
        ]
      },
      "connect": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "sendingSideID": {
            "type": "boolean"
          },
          "dialogId": {
            "type": "integer",
            "format": "int64"
          },
          "final": {
            "type": "boolean"
          },
          "ocsIApplicable": {
            "type": "boolean"
          },
          "calledPartyNumber": {
            "$ref": "#/components/schemas/CalledPartyNumber"
          },
          "redirectingPartyNumber": {
            "$ref": "#/components/schemas/RedirectingNumberImpl"
          },
          "legType": {
            "$ref": "#/components/schemas/LegType"
          },
          "redirectionInformation": {
            "$ref": "#/components/schemas/RedirectionInformation"
          },
          "eventType": {
            "$ref": "#/components/schemas/EventTypeBCSM"
          },
          "callingPartyNumber": {
            "$ref": "#/components/schemas/CallingPartyNumber"
          },
          "originalCalledNumber": {
            "$ref": "#/components/schemas/OriginalCalledNumber"
          }
        },
        "required": [
          "sendingSideID",
          "dialogId",
          "final",
          "ocsIApplicable"
        ]
      },
      "connectToResource": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "callSegmentId": {
            "type": "integer",
            "format": "int32"
          },
          "ipResourceAddress": {
            "$ref": "#/components/schemas/address"
          }
        },
        "required": [
          "callSegmentId"
        ]
      },
      "continueWithArgs": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "segment": {
            "type": "integer",
            "format": "int32"
          },
          "dialogId": {
            "type": "integer",
            "format": "int64"
          },
          "eventType": {
            "$ref": "#/components/schemas/EventTypeBCSM"
          },
          "callingPartyNumber": {
            "$ref": "#/components/schemas/CallingPartyNumber"
          },
          "final": {
            "type": "boolean"
          }
        },
        "required": [
          "dialogId",
          "final"
        ]
      },
      "disconnectForwardConnection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "releaseCall": {
            "type": "boolean"
          }
        },
        "required": [
          "releaseCall"
        ]
      },
      "disconnectLegReq": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "releaseCause": {
            "type": "integer",
            "format": "int32"
          },
          "receivingLeg": {
            "$ref": "#/components/schemas/LegType"
          },
          "sendingLeg": {
            "$ref": "#/components/schemas/LegType"
          }
        }
      },
      "dpSpecificCriteria": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "applicationTimer": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "entityReleased": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invokeId": {
            "type": "integer",
            "format": "int32"
          },
          "operationCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "invokeId",
          "operationCode"
        ]
      },
      "establishTemporaryConnectionReq": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "callSegmentId": {
            "type": "integer",
            "format": "int32"
          },
          "assistingSSPIPRoutingAddress": {
            "type": "string"
          },
          "bothway": {
            "type": "integer",
            "format": "int32"
          },
          "scfId": {
            "type": "string",
            "format": "binary"
          },
          "ipResourceAddress": {
            "$ref": "#/components/schemas/address"
          }
        },
        "required": [
          "callSegmentId",
          "bothway"
        ]
      },
      "eventReportBCSM": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eventSpecificInfo": {
            "type": "integer",
            "format": "int32"
          },
          "legType": {
            "$ref": "#/components/schemas/LegType"
          },
          "dialogId": {
            "type": "integer",
            "format": "int64"
          },
          "eventType": {
            "$ref": "#/components/schemas/EventTypeBCSM"
          }
        },
        "required": [
          "eventSpecificInfo",
          "dialogId"
        ]
      },
      "fixdialRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "calledPartyNumber": {
            "$ref": "#/components/schemas/address"
          },
          "imsi": {
            "type": "string"
          },
          "serviceKey": {
            "type": "integer",
            "format": "int32"
          },
          "eventType": {
            "$ref": "#/components/schemas/EventTypeBCSM"
          },
          "vlrNumber": {
            "type": "string"
          }
        },
        "required": [
          "serviceKey"
        ]
      },
      "furnishChargingInformationReq": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "partyToCharge": {
            "$ref": "#/components/schemas/LegType"
          },
          "data": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "initialDp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "callReferenceNumber": {
            "type": "string"
          },
          "bearerCap": {
            "type": "string"
          },
          "callingPartyCategory": {
            "type": "integer",
            "format": "int32"
          },
          "mscAddress": {
            "$ref": "#/components/schemas/address"
          },
          "subscriberState": {
            "type": "string"
          },
          "eventTypeSMS": {
            "$ref": "#/components/schemas/EventTypeSMS"
          },
          "locationInformation": {
            "$ref": "#/components/schemas/locationInfo"
          },
          "serviceKey": {
            "type": "integer",
            "format": "int32"
          },
          "dialogId": {
            "type": "integer",
            "format": "int64"
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string"
          },
          "locationNumberA": {
            "$ref": "#/components/schemas/LocationNumber"
          },
          "locationNumber": {
            "$ref": "#/components/schemas/address"
          },
          "calledPartyBCDNumber": {
            "$ref": "#/components/schemas/address"
          },
          "timeAndTimezone": {
            "$ref": "#/components/schemas/timeAndTimezone"
          },
          "callingPartyNumber": {
            "$ref": "#/components/schemas/address"
          },
          "redirectingPartyNumberA": {
            "$ref": "#/components/schemas/CallingPartyNumber"
          },
          "causeIndicators": {
            "$ref": "#/components/schemas/CauseIndicators"
          },
          "additionalCallingPartyNumber": {
            "type": "string"
          },
          "callingPartyNumberA": {
            "$ref": "#/components/schemas/CallingPartyNumber"
          },
          "calledPartyNumberA": {
            "$ref": "#/components/schemas/CalledPartyNumber"
          },
          "extBasicSeriviceCode": {
            "$ref": "#/components/schemas/TeleserviceCodeValue"
          },
          "from": {
            "type": "string"
          },
          "calledPartyNumber": {
            "$ref": "#/components/schemas/address"
          },
          "invokeId": {
            "type": "integer",
            "format": "int64"
          },
          "redirectingPartyNumber": {
            "$ref": "#/components/schemas/address"
          },
          "originalCalledNumberA": {
            "$ref": "#/components/schemas/OriginalCalledNumber"
          },
          "gmscAddress": {
            "$ref": "#/components/schemas/address"
          },
          "imsi": {
            "type": "string"
          },
          "eventType": {
            "$ref": "#/components/schemas/EventTypeBCSM"
          },
          "originalCalledNumber": {
            "$ref": "#/components/schemas/address"
          }
        },
        "required": [
          "serviceKey",
          "dialogId",
          "invokeId"
        ]
      },
      "initiateCallAttemptReq": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "callReferenceNumber": {
            "type": "string"
          },
          "destinationAddressList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/address"
            }
          },
          "receivingLeg": {
            "$ref": "#/components/schemas/LegType"
          },
          "sendingLeg": {
            "$ref": "#/components/schemas/LegType"
          },
          "callingPartyAddress": {
            "$ref": "#/components/schemas/address"
          },
          "gsmSCFAddress": {
            "$ref": "#/components/schemas/address"
          },
          "newCallSegment": {
            "type": "integer",
            "format": "int32"
          },
          "suppressTCSi": {
            "type": "boolean"
          }
        },
        "required": [
          "newCallSegment",
          "suppressTCSi"
        ]
      },
      "ipSspCapabilities": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ipRoutingAddressSupported": {
            "type": "boolean"
          },
          "extraData": {
            "type": "string",
            "format": "binary"
          },
          "voiceInformationSupportedViaSpeechRecognition": {
            "type": "boolean"
          },
          "generationOfVoiceAnnouncementsFromTextSupported": {
            "type": "boolean"
          },
          "voiceInformationSupportedViaVoiceRecognition": {
            "type": "boolean"
          },
          "voiceBackSupported": {
            "type": "boolean"
          }
        },
        "required": [
          "ipRoutingAddressSupported",
          "voiceInformationSupportedViaSpeechRecognition",
          "generationOfVoiceAnnouncementsFromTextSupported",
          "voiceInformationSupportedViaVoiceRecognition",
          "voiceBackSupported"
        ]
      },
      "locationInfo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "vlrNumberA": {
            "$ref": "#/components/schemas/ISDNAddressString"
          },
          "utranCellIdTgpp": {
            "type": "string"
          },
          "vlrNumber": {
            "$ref": "#/components/schemas/address"
          }
        }
      },
      "moveLegReq": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "receivingLeg": {
            "$ref": "#/components/schemas/LegType"
          },
          "sendingLeg": {
            "$ref": "#/components/schemas/LegType"
          }
        }
      },
      "playAnnouncement": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "numberOfRepetitions": {
            "type": "integer",
            "format": "int32"
          },
          "dialogId": {
            "type": "integer",
            "format": "int64"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "messageId": {
            "type": "integer",
            "format": "int32"
          },
          "free": {
            "type": "boolean"
          },
          "final": {
            "type": "boolean"
          },
          "ipResourceAddress": {
            "$ref": "#/components/schemas/address"
          },
          "interval": {
            "type": "integer",
            "format": "int32"
          },
          "timerValue": {
            "type": "integer",
            "format": "int32"
          },
          "callbackUrl": {
            "type": "string"
          },
          "timerId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "numberOfRepetitions",
          "dialogId",
          "duration",
          "messageId",
          "free",
          "final",
          "interval",
          "timerValue",
          "timerId"
        ]
      },
      "promptCollectUserInfoReq": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "interrutibleAnnInd": {
            "type": "boolean"
          },
          "callSegmentId": {
            "type": "integer",
            "format": "int32"
          },
          "errorTreatment": {
            "$ref": "#/components/schemas/ErrorTreatment"
          },
          "startDigits": {
            "type": "string",
            "format": "binary"
          },
          "numberOfRepetitions": {
            "type": "integer",
            "format": "int32"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "messageId": {
            "type": "integer",
            "format": "int32"
          },
          "voiceBack": {
            "type": "boolean"
          },
          "requestAnnouncementStartedNotification": {
            "type": "boolean"
          },
          "interval": {
            "type": "integer",
            "format": "int32"
          },
          "interDigitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "voiceInformation": {
            "type": "boolean"
          },
          "minimumNbOfDigits": {
            "type": "integer",
            "format": "int32"
          },
          "endOfReplyDigits": {
            "type": "string",
            "format": "binary"
          },
          "firstDigitTimeout": {
            "type": "integer",
            "format": "int32"
          },
          "cancelDigits": {
            "type": "string",
            "format": "binary"
          },
          "maximumNbOfDigits": {
            "type": "integer",
            "format": "int32"
          },
          "disconnectedFromIPForbidden": {
            "type": "boolean"
          }
        },
        "required": [
          "interrutibleAnnInd",
          "callSegmentId",
          "numberOfRepetitions",
          "duration",
          "messageId",
          "voiceBack",
          "requestAnnouncementStartedNotification",
          "interval",
          "interDigitTimeout",
          "voiceInformation",
          "minimumNbOfDigits",
          "firstDigitTimeout",
          "maximumNbOfDigits",
          "disconnectedFromIPForbidden"
        ]
      },
      "promptCollectUserInfoRes": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invokeId": {
            "type": "integer",
            "format": "int32"
          },
          "genericDigits": {
            "type": "string"
          },
          "genericNumber": {
            "$ref": "#/components/schemas/address"
          }
        },
        "required": [
          "invokeId"
        ]
      },
      "requestReportBCSM": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bcsmEventList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bcsmEvent"
            }
          }
        }
      },
      "requestedInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/RequestedInformationType"
          }
        },
        "required": [
          "value"
        ]
      },
      "resetTimerReq": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "timerValue": {
            "type": "integer",
            "format": "int32"
          },
          "callSegmentId": {
            "type": "integer",
            "format": "int32"
          },
          "timerId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "timerValue",
          "callSegmentId",
          "timerId"
        ]
      },
      "returnError": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invokeId": {
            "type": "integer",
            "format": "int32"
          },
          "errorCode": {
            "type": "integer",
            "format": "int32"
          },
          "errorType": {
            "$ref": "#/components/schemas/componentErrorType"
          }
        },
        "required": [
          "invokeId",
          "errorCode"
        ]
      },
      "returnResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invokeId": {
            "type": "integer",
            "format": "int32"
          },
          "operationCode": {
            "type": "integer",
            "format": "int32"
          },
          "final": {
            "type": "boolean"
          }
        },
        "required": [
          "invokeId",
          "operationCode",
          "final"
        ]
      },
      "specializedResourceReport": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstAnnouncementStarted": {
            "type": "boolean"
          },
          "allAnnouncementsComplete": {
            "type": "boolean"
          }
        },
        "required": [
          "firstAnnouncementStarted",
          "allAnnouncementsComplete"
        ]
      },
      "splitLegReq": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "newCallSegmentId": {
            "type": "integer",
            "format": "int32"
          },
          "receivingLeg": {
            "$ref": "#/components/schemas/LegType"
          },
          "sendingLeg": {
            "$ref": "#/components/schemas/LegType"
          }
        },
        "required": [
          "newCallSegmentId"
        ]
      },
      "timeAndTimezone": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "timeZone": {
            "type": "integer",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "timeZone",
          "day",
          "year",
          "minute",
          "second",
          "hour",
          "month"
        ]
      },
      "authMethod": {
        "type": "string",
        "enum": [
          "ANY",
          "APIKEY",
          "BASIC",
          "JWT",
          "NONE",
          "OAUTH2"
        ]
      },
      "capif": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "tokenCacheMaxSize": {
            "type": "integer",
            "format": "int32"
          },
          "authMethod": {
            "$ref": "#/components/schemas/authMethod"
          },
          "authUrl": {
            "type": "string"
          },
          "passwordExpiryDays": {
            "type": "integer",
            "format": "int32"
          },
          "tokenCacheMaxTime": {
            "type": "integer",
            "format": "int32"
          },
          "expires": {
            "type": "integer",
            "format": "int32"
          },
          "useUrl": {
            "type": "string"
          }
        },
        "required": [
          "tokenCacheMaxSize",
          "passwordExpiryDays",
          "tokenCacheMaxTime",
          "expires"
        ]
      },
      "httpClient": {
        "type": "object",
        "additionalProperties": false,
        "properties": {}
      },
      "http2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {}
      },
      "mongo": {
        "type": "object",
        "additionalProperties": false,
        "properties": {}
      },
      "snmp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {}
      },
      "m3uaAsp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {}
      },
      "sccp": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "natureOfAddressE": {
            "$ref": "#/components/schemas/NatureOfAddress"
          },
          "numberingPlanE": {
            "$ref": "#/components/schemas/NumberingPlan"
          },
          "routingIndicatorE": {
            "$ref": "#/components/schemas/RoutingIndicator"
          },
          "routingAlarmTimeout": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "routingAlarmTimeout"
        ]
      },
      "sccpDestination": {
        "type": "object",
        "additionalProperties": false,
        "properties": {}
      },
      "sccpGt": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "natureOfAddressE": {
            "$ref": "#/components/schemas/NatureOfAddress"
          },
          "gtBCDEncodingE": {
            "$ref": "#/components/schemas/EncodingScheme"
          },
          "digits": {
            "type": "string"
          },
          "numberingPlanE": {
            "$ref": "#/components/schemas/NumberingPlan"
          },
          "natureOfAddress": {
            "type": "integer",
            "format": "int32"
          },
          "numberingPlan": {
            "type": "integer",
            "format": "int32"
          },
          "translationType": {
            "type": "integer",
            "format": "int32"
          },
          "bcdEncoding": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "natureOfAddress",
          "numberingPlan",
          "translationType",
          "bcdEncoding"
        ]
      },
      "sccpResource": {
        "type": "object",
        "additionalProperties": false,
        "properties": {}
      },
      "sccpRoutingAddress": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "ssn": {
            "type": "integer",
            "format": "int32"
          },
          "pc": {
            "type": "integer",
            "format": "int32"
          },
          "gt": {
            "$ref": "#/components/schemas/sccpGt"
          }
        },
        "required": [
          "id",
          "ssn",
          "pc"
        ]
      },
      "sccpRoutingRule": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "ruleOriginationType": {
            "$ref": "#/components/schemas/OriginationType"
          },
          "ruleType": {
            "$ref": "#/components/schemas/RuleType"
          },
          "loadSharingAlgorithm": {
            "$ref": "#/components/schemas/LoadSharingAlgorithm"
          }
        }
      },
      "sccpSap": {
        "type": "object",
        "additionalProperties": false,
        "properties": {}
      },
      "sctpAssociation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "secondaryIP": {
            "type": "string"
          },
          "primaryIP": {
            "type": "string"
          },
          "serverIP": {
            "type": "string"
          },
          "clientIP": {
            "type": "string"
          }
        }
      },
      "sctpServer": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "secondaryIP": {
            "type": "string"
          },
          "primaryIP": {
            "type": "string"
          }
        }
      },
      "ss7": {
        "type": "object",
        "additionalProperties": false,
        "properties": {}
      },
      "ByteBuf": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "byte": {
            "type": "integer",
            "format": "int32"
          },
          "mediumLE": {
            "type": "integer",
            "format": "int32"
          },
          "unsignedShort": {
            "type": "integer",
            "format": "int32"
          },
          "int": {
            "type": "integer",
            "format": "int32"
          },
          "readable": {
            "type": "boolean"
          },
          "writable": {
            "type": "boolean"
          },
          "readOnly": {
            "type": "boolean"
          },
          "longLE": {
            "type": "integer",
            "format": "int64"
          },
          "boolean": {
            "type": "boolean"
          },
          "doubleLE": {
            "type": "number",
            "format": "double"
          },
          "intLE": {
            "type": "integer",
            "format": "int32"
          },
          "long": {
            "type": "integer",
            "format": "int64"
          },
          "unsignedMedium": {
            "type": "integer",
            "format": "int32"
          },
          "direct": {
            "type": "boolean"
          },
          "floatLE": {
            "type": "number",
            "format": "float"
          },
          "charSequence": {
            "$ref": "#/components/schemas/CharSequence"
          },
          "bytes": {
            "$ref": "#/components/schemas/ByteBuf"
          },
          "unsignedIntLE": {
            "type": "integer",
            "format": "int64"
          },
          "unsignedInt": {
            "type": "integer",
            "format": "int64"
          },
          "unsignedShortLE": {
            "type": "integer",
            "format": "int32"
          },
          "char": {
            "type": "string"
          },
          "shortLE": {
            "type": "integer",
            "format": "int32"
          },
          "medium": {
            "type": "integer",
            "format": "int32"
          },
          "double": {
            "type": "number",
            "format": "double"
          },
          "float": {
            "type": "number",
            "format": "float"
          },
          "accessible": {
            "type": "boolean"
          },
          "short": {
            "type": "integer",
            "format": "int32"
          },
          "unsignedByte": {
            "type": "integer",
            "format": "int32"
          },
          "contiguous": {
            "type": "boolean"
          },
          "unsignedMediumLE": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "byte",
          "mediumLE",
          "unsignedShort",
          "int",
          "readable",
          "readable",
          "writable",
          "writable",
          "readOnly",
          "longLE",
          "boolean",
          "doubleLE",
          "intLE",
          "long",
          "unsignedMedium",
          "direct",
          "floatLE",
          "bytes",
          "bytes",
          "unsignedIntLE",
          "unsignedInt",
          "unsignedShortLE",
          "char",
          "shortLE",
          "medium",
          "double",
          "float",
          "accessible",
          "short",
          "unsignedByte",
          "contiguous",
          "unsignedMediumLE"
        ]
      },
      "CharSequence": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "empty": {
            "type": "boolean"
          }
        },
        "required": [
          "empty"
        ]
      },
      "EventTypeSMS": {
        "type": "string",
        "enum": [
          "oSmsFailure",
          "oSmsSubmission",
          "smsCollectedInfo",
          "smsDeliveryRequested",
          "tSmsDelivery",
          "tSmsFailure"
        ]
      },
      "ControlType": {
        "type": "string",
        "enum": [
          "manuallyInitiated",
          "sCPOverloaded"
        ]
      },
      "RequestedInformationType": {
        "type": "string",
        "enum": [
          "callAttemptElapsedTime",
          "callConnectedElapsedTime",
          "callStopTime",
          "releaseCause"
        ]
      },
      "AddressNature": {
        "type": "string",
        "enum": [
          "abbreviated_number",
          "international_number",
          "national_significant_number",
          "network_specific_number",
          "reserved",
          "reserved_for_extension",
          "subscriber_number",
          "unknown"
        ]
      },
      "ErrorTreatment": {
        "type": "string",
        "enum": [
          "help",
          "repeatPrompt",
          "stdErrorAndInfo"
        ]
      },
      "EventTypeBCSM": {
        "type": "string",
        "enum": [
          "analyzedInformation",
          "callAccepted",
          "collectedInfo",
          "oAbandon",
          "oAlerting",
          "oAnswer",
          "oCalledPartyBusy",
          "oCalledPartyNotReachable",
          "oChangeOfPosition",
          "oDisconnect",
          "oMidCall",
          "oNoAnswer",
          "oReAnswer",
          "oServiceChange",
          "oSuspended",
          "oTermSeized",
          "origAttemptauthorized",
          "routeSelectFailure",
          "tAbandon",
          "tAlerting",
          "tAnswer",
          "tBusy",
          "tCalledPartyNotReachable",
          "tChangeOfPosition",
          "tDisconnect",
          "tMidCall",
          "tNoAnswer",
          "tRouteSelectFailure",
          "tServiceChange",
          "termAttemptAuthorized"
        ]
      },
      "ISDNAddressString": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "addressNature": {
            "$ref": "#/components/schemas/AddressNature"
          },
          "extension": {
            "type": "boolean"
          },
          "numberingPlan": {
            "$ref": "#/components/schemas/NumberingPlan"
          },
          "address": {
            "type": "string"
          }
        },
        "required": [
          "extension"
        ]
      },
      "LegType": {
        "type": "string",
        "enum": [
          "leg1",
          "leg2",
          "leg3",
          "leg4",
          "leg5",
          "leg6",
          "leg7",
          "leg8",
          "leg9"
        ]
      },
      "MonitorMode": {
        "type": "string",
        "enum": [
          "interrupted",
          "notifyAndContinue",
          "transparent"
        ]
      },
      "NumberingPlan": {
        "type": "string",
        "enum": [
          "DATA",
          "GENERIC",
          "ISDN_MOBILE",
          "ISDN_TELEPHONY",
          "LAND_MOBILE",
          "MERITIME_MOBILE",
          "PRIVATE",
          "RESERVED",
          "SPARE_10",
          "SPARE_11",
          "SPARE_12",
          "SPARE_13",
          "SPARE_8",
          "SPARE_9",
          "TELEX",
          "UNKNOWN"
        ]
      },
      "TeleserviceCodeValue": {
        "type": "string",
        "enum": [
          "allDataTeleservices",
          "allFacsimileTransmissionServices",
          "allPLMN_specificTS",
          "allShortMessageServices",
          "allSpeechTransmissionServices",
          "allTeleservices",
          "allTeleservices_ExeptSMS",
          "allVoiceGroupCallServices",
          "automaticFacsimileGroup3",
          "cellBroadcast",
          "emergencyCalls",
          "facsimileGroup3AndAlterSpeech",
          "facsimileGroup4",
          "plmn_specificTS_1",
          "plmn_specificTS_2",
          "plmn_specificTS_3",
          "plmn_specificTS_4",
          "plmn_specificTS_5",
          "plmn_specificTS_6",
          "plmn_specificTS_7",
          "plmn_specificTS_8",
          "plmn_specificTS_9",
          "plmn_specificTS_A",
          "plmn_specificTS_B",
          "plmn_specificTS_C",
          "plmn_specificTS_D",
          "plmn_specificTS_E",
          "plmn_specificTS_F",
          "shortMessageMO_PP",
          "shortMessageMT_PP",
          "telephony",
          "voiceBroadcastCall",
          "voiceGroupCall"
        ]
      },
      "NatureOfAddress": {
        "type": "string",
        "enum": [
          "INTERNATIONAL",
          "NATIONAL",
          "RESERVED",
          "RESERVED_NATIONAL_112",
          "RESERVED_NATIONAL_113",
          "RESERVED_NATIONAL_114",
          "RESERVED_NATIONAL_115",
          "RESERVED_NATIONAL_116",
          "RESERVED_NATIONAL_117",
          "RESERVED_NATIONAL_118",
          "RESERVED_NATIONAL_119",
          "RESERVED_NATIONAL_120",
          "RESERVED_NATIONAL_121",
          "RESERVED_NATIONAL_122",
          "RESERVED_NATIONAL_123",
          "RESERVED_NATIONAL_124",
          "RESERVED_NATIONAL_125",
          "RESERVED_NATIONAL_126",
          "RESERVED_NATIONAL_2",
          "SPARE_10",
          "SPARE_100",
          "SPARE_101",
          "SPARE_102",
          "SPARE_103",
          "SPARE_104",
          "SPARE_105",
          "SPARE_106",
          "SPARE_107",
          "SPARE_108",
          "SPARE_109",
          "SPARE_11",
          "SPARE_110",
          "SPARE_111",
          "SPARE_12",
          "SPARE_13",
          "SPARE_14",
          "SPARE_15",
          "SPARE_16",
          "SPARE_17",
          "SPARE_18",
          "SPARE_19",
          "SPARE_20",
          "SPARE_21",
          "SPARE_22",
          "SPARE_23",
          "SPARE_24",
          "SPARE_25",
          "SPARE_26",
          "SPARE_27",
          "SPARE_28",
          "SPARE_29",
          "SPARE_30",
          "SPARE_31",
          "SPARE_32",
          "SPARE_33",
          "SPARE_34",
          "SPARE_35",
          "SPARE_36",
          "SPARE_37",
          "SPARE_38",
          "SPARE_39",
          "SPARE_40",
          "SPARE_41",
          "SPARE_42",
          "SPARE_43",
          "SPARE_44",
          "SPARE_45",
          "SPARE_46",
          "SPARE_47",
          "SPARE_48",
          "SPARE_49",
          "SPARE_5",
          "SPARE_50",
          "SPARE_51",
          "SPARE_52",
          "SPARE_53",
          "SPARE_54",
          "SPARE_55",
          "SPARE_56",
          "SPARE_57",
          "SPARE_58",
          "SPARE_59",
          "SPARE_6",
          "SPARE_60",
          "SPARE_61",
          "SPARE_62",
          "SPARE_63",
          "SPARE_64",
          "SPARE_65",
          "SPARE_66",
          "SPARE_67",
          "SPARE_68",
          "SPARE_69",
          "SPARE_7",
          "SPARE_70",
          "SPARE_71",
          "SPARE_72",
          "SPARE_73",
          "SPARE_74",
          "SPARE_75",
          "SPARE_76",
          "SPARE_77",
          "SPARE_78",
          "SPARE_79",
          "SPARE_8",
          "SPARE_80",
          "SPARE_81",
          "SPARE_82",
          "SPARE_83",
          "SPARE_84",
          "SPARE_85",
          "SPARE_86",
          "SPARE_87",
          "SPARE_88",
          "SPARE_89",
          "SPARE_9",
          "SPARE_90",
          "SPARE_91",
          "SPARE_92",
          "SPARE_93",
          "SPARE_94",
          "SPARE_95",
          "SPARE_96",
          "SPARE_97",
          "SPARE_98",
          "SPARE_99",
          "SUBSCRIBER",
          "UNKNOWN"
        ]
      },
      "RoutingIndicator": {
        "type": "string",
        "enum": [
          "ROUTING_BASED_ON_DPC_AND_SSN",
          "ROUTING_BASED_ON_GLOBAL_TITLE"
        ]
      },
      "RedirectingNumberImpl": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "addressRepresentationRestrictedIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "numberingPlanIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "natureOfAddressIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "primitiveName": {
            "type": "string"
          },
          "oddFlag": {
            "type": "boolean"
          }
        },
        "required": [
          "addressRepresentationRestrictedIndicator",
          "addressRepresentationRestrictedIndicator",
          "numberingPlanIndicator",
          "numberingPlanIndicator",
          "code",
          "natureOfAddressIndicator",
          "natureOfAddressIndicator",
          "oddFlag",
          "oddFlag"
        ]
      },
      "CalledPartyNumber": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "natureOfAddressIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "numberingPlanIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "internalNetworkNumberIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "type": "string"
          },
          "oddFlag": {
            "type": "boolean"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "natureOfAddressIndicator",
          "numberingPlanIndicator",
          "internalNetworkNumberIndicator",
          "oddFlag",
          "code"
        ]
      },
      "CallingPartyNumber": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "natureOfAddressIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "numberIncompleteIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "addressRepresentationRestrictedIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "numberingPlanIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "screeningIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "type": "string"
          },
          "oddFlag": {
            "type": "boolean"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "natureOfAddressIndicator",
          "numberIncompleteIndicator",
          "addressRepresentationRestrictedIndicator",
          "numberingPlanIndicator",
          "screeningIndicator",
          "oddFlag",
          "code"
        ]
      },
      "CauseIndicators": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "diagnostics": {
            "$ref": "#/components/schemas/ByteBuf"
          },
          "location": {
            "type": "integer",
            "format": "int32"
          },
          "recommendation": {
            "type": "integer",
            "format": "int32"
          },
          "causeValue": {
            "type": "integer",
            "format": "int32"
          },
          "codingStandard": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "location",
          "recommendation",
          "causeValue",
          "codingStandard",
          "code"
        ]
      },
      "LocationNumber": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "natureOfAddressIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "addressRepresentationRestrictedIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "numberingPlanIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "screeningIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "internalNetworkNumberIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "type": "string"
          },
          "oddFlag": {
            "type": "boolean"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "natureOfAddressIndicator",
          "addressRepresentationRestrictedIndicator",
          "numberingPlanIndicator",
          "screeningIndicator",
          "internalNetworkNumberIndicator",
          "oddFlag",
          "code"
        ]
      },
      "OriginalCalledNumber": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "natureOfAddressIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "addressRepresentationRestrictedIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "numberingPlanIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "address": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "oddFlag": {
            "type": "boolean"
          }
        },
        "required": [
          "natureOfAddressIndicator",
          "addressRepresentationRestrictedIndicator",
          "numberingPlanIndicator",
          "code",
          "oddFlag"
        ]
      },
      "RedirectionInformation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "redirectingIndicator": {
            "type": "integer",
            "format": "int32"
          },
          "originalRedirectionReason": {
            "type": "integer",
            "format": "int32"
          },
          "redirectionCounter": {
            "type": "integer",
            "format": "int32"
          },
          "redirectionReason": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "redirectingIndicator",
          "originalRedirectionReason",
          "redirectionCounter",
          "redirectionReason",
          "code"
        ]
      },
      "LoadSharingAlgorithm": {
        "type": "string",
        "enum": [
          "Bit0",
          "Bit1",
          "Bit2",
          "Bit3",
          "Bit4",
          "Undefined"
        ]
      },
      "OriginationType": {
        "type": "string",
        "enum": [
          "ALL",
          "LOCAL",
          "REMOTE"
        ]
      },
      "RuleType": {
        "type": "string",
        "enum": [
          "BROADCAST",
          "DOMINANT",
          "LOADSHARED",
          "SOLITARY"
        ]
      },
      "EncodingScheme": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EncodingSchemeType"
          },
          "schemeCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "schemeCode"
        ]
      },
      "EncodingSchemeType": {
        "type": "string",
        "enum": [
          "BCD_EVEN",
          "BCD_ODD",
          "NATIONAL_SPECIFIC",
          "UNKNOWN"
        ]
      }
    }
  }
}